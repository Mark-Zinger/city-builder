/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Building_tower_Mesh: THREE.Mesh
    Building_tower_Mesh_1: THREE.Mesh
    Building_tower_Mesh_2: THREE.Mesh
    Building_tower_Mesh_3: THREE.Mesh
    Building_tower_Mesh_4: THREE.Mesh
  }
  materials: {
    material: THREE.MeshStandardMaterial
    ['.1_3']: THREE.MeshStandardMaterial
    ['material_18.001']: THREE.MeshStandardMaterial
    material_35: THREE.MeshStandardMaterial
    material_38: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  //@ts-ignore
  const { nodes, materials } = useGLTF('/assets/building_tower.glb') as GLTFResult
  return (
    <group ref={group} dispose={null} scale={2}>
        <mesh geometry={nodes.Building_tower_Mesh.geometry} material={materials.material} scale={0.1} />
        <mesh geometry={nodes.Building_tower_Mesh_1.geometry} material={materials['.1_3']} scale={0.1} />
        <mesh geometry={nodes.Building_tower_Mesh_2.geometry} material={materials['material_18.001']} scale={0.1} />
        <mesh geometry={nodes.Building_tower_Mesh_3.geometry} material={materials.material_35} scale={0.1} />
        <mesh geometry={nodes.Building_tower_Mesh_4.geometry} material={materials.material_38} scale={0.1} />
    </group>
  )
}

useGLTF.preload('/building_tower.glb')
